{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<center>\n",
    "<img src=\"../../img/ods_stickers.jpg\">\n",
    "## Открытый курс по машинному обучению\n",
    "</center>\n",
    "Автор материала: программист-исследователь Mail.ru Group, старший преподаватель Факультета Компьютерных Наук ВШЭ Юрий Кашницкий. Материал распространяется на условиях лицензии [Creative Commons CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/). Можно использовать в любых целях (редактировать, поправлять и брать за основу), кроме коммерческих, но с обязательным упоминанием автора материала."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <center>Домашнее задание 1. <br> Анализ данных по доходу населения UCI Adult</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**В задании предлагается с помощью Pandas ответить на несколько вопросов по данным репозитория UCI [Adult](https://archive.ics.uci.edu/ml/datasets/Adult) (качать данные не надо – они уже есть в репозитории). Для отправки решений используйте [онлайн-форму](https://goo.gl/forms/pB1tDIArMvTUsIUg2).**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Уникальные значения признаков (больше информации по ссылке выше):\n",
    "- age: continuous.\n",
    "- workclass: Private, Self-emp-not-inc, Self-emp-inc, Federal-gov, Local-gov, State-gov, Without-pay, Never-worked.\n",
    "- fnlwgt: continuous.\n",
    "- education: Bachelors, Some-college, 11th, HS-grad, Prof-school, Assoc-acdm, Assoc-voc, 9th, 7th-8th, 12th, Masters, 1st-4th, 10th, Doctorate, 5th-6th, Preschool.\n",
    "- education-num: continuous.\n",
    "- marital-status: Married-civ-spouse, Divorced, Never-married, Separated, Widowed, Married-spouse-absent, Married-AF-spouse.\n",
    "- occupation: Tech-support, Craft-repair, Other-service, Sales, Exec-managerial, Prof-specialty, Handlers-cleaners, Machine-op-inspct, Adm-clerical, Farming-fishing, Transport-moving, Priv-house-serv, Protective-serv, Armed-Forces.\n",
    "- relationship: Wife, Own-child, Husband, Not-in-family, Other-relative, Unmarried.\n",
    "- race: White, Asian-Pac-Islander, Amer-Indian-Eskimo, Other, Black.\n",
    "- sex: Female, Male.\n",
    "- capital-gain: continuous.\n",
    "- capital-loss: continuous.\n",
    "- hours-per-week: continuous.\n",
    "- native-country: United-States, Cambodia, England, Puerto-Rico, Canada, Germany, Outlying-US(Guam-USVI-etc), India, Japan, Greece, South, China, Cuba, Iran, Honduras, Philippines, Italy, Poland, Jamaica, Vietnam, Mexico, Portugal, Ireland, France, Dominican-Republic, Laos, Ecuador, Taiwan, Haiti, Columbia, Hungary, Guatemala, Nicaragua, Scotland, Thailand, Yugoslavia, El-Salvador, Trinadad&Tobago, Peru, Hong, Holand-Netherlands.   \n",
    "- salary: >50K,<=50K"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD:jupyter_notebooks/topic1_pandas_data_analysis/hw1_adult_pandas.ipynb
   "execution_count": 56,
=======
   "execution_count": 1,
>>>>>>> upstream/master:jupyter_notebooks/topic01_pandas_data_analysis/hw1_adult_pandas.ipynb
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "# чтоб картинки рисовались в тетрадке\n",
    "%matplotlib inline \n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "plt.rcParams['figure.figsize'] = (10, 8)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD:jupyter_notebooks/topic1_pandas_data_analysis/hw1_adult_pandas.ipynb
   "execution_count": 57,
=======
   "execution_count": 2,
>>>>>>> upstream/master:jupyter_notebooks/topic01_pandas_data_analysis/hw1_adult_pandas.ipynb
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>workclass</th>\n",
       "      <th>fnlwgt</th>\n",
       "      <th>education</th>\n",
       "      <th>education-num</th>\n",
       "      <th>marital-status</th>\n",
       "      <th>occupation</th>\n",
       "      <th>relationship</th>\n",
       "      <th>race</th>\n",
       "      <th>sex</th>\n",
       "      <th>capital-gain</th>\n",
       "      <th>capital-loss</th>\n",
       "      <th>hours-per-week</th>\n",
       "      <th>native-country</th>\n",
       "      <th>salary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>39</td>\n",
       "      <td>State-gov</td>\n",
       "      <td>77516</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>13</td>\n",
       "      <td>Never-married</td>\n",
       "      <td>Adm-clerical</td>\n",
       "      <td>Not-in-family</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>2174</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "      <td>United-States</td>\n",
       "      <td>&lt;=50K</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>50</td>\n",
       "      <td>Self-emp-not-inc</td>\n",
       "      <td>83311</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>13</td>\n",
       "      <td>Married-civ-spouse</td>\n",
       "      <td>Exec-managerial</td>\n",
       "      <td>Husband</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>United-States</td>\n",
       "      <td>&lt;=50K</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>38</td>\n",
       "      <td>Private</td>\n",
       "      <td>215646</td>\n",
       "      <td>HS-grad</td>\n",
       "      <td>9</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>Handlers-cleaners</td>\n",
       "      <td>Not-in-family</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "      <td>United-States</td>\n",
       "      <td>&lt;=50K</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>53</td>\n",
       "      <td>Private</td>\n",
       "      <td>234721</td>\n",
       "      <td>11th</td>\n",
       "      <td>7</td>\n",
       "      <td>Married-civ-spouse</td>\n",
       "      <td>Handlers-cleaners</td>\n",
       "      <td>Husband</td>\n",
       "      <td>Black</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "      <td>United-States</td>\n",
       "      <td>&lt;=50K</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>28</td>\n",
       "      <td>Private</td>\n",
       "      <td>338409</td>\n",
       "      <td>Bachelors</td>\n",
       "      <td>13</td>\n",
       "      <td>Married-civ-spouse</td>\n",
       "      <td>Prof-specialty</td>\n",
       "      <td>Wife</td>\n",
       "      <td>Black</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>40</td>\n",
       "      <td>Cuba</td>\n",
       "      <td>&lt;=50K</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age         workclass  fnlwgt  education  education-num  \\\n",
       "0   39         State-gov   77516  Bachelors             13   \n",
       "1   50  Self-emp-not-inc   83311  Bachelors             13   \n",
       "2   38           Private  215646    HS-grad              9   \n",
       "3   53           Private  234721       11th              7   \n",
       "4   28           Private  338409  Bachelors             13   \n",
       "\n",
       "       marital-status         occupation   relationship   race     sex  \\\n",
       "0       Never-married       Adm-clerical  Not-in-family  White    Male   \n",
       "1  Married-civ-spouse    Exec-managerial        Husband  White    Male   \n",
       "2            Divorced  Handlers-cleaners  Not-in-family  White    Male   \n",
       "3  Married-civ-spouse  Handlers-cleaners        Husband  Black    Male   \n",
       "4  Married-civ-spouse     Prof-specialty           Wife  Black  Female   \n",
       "\n",
       "   capital-gain  capital-loss  hours-per-week native-country salary  \n",
       "0          2174             0              40  United-States  <=50K  \n",
       "1             0             0              13  United-States  <=50K  \n",
       "2             0             0              40  United-States  <=50K  \n",
       "3             0             0              40  United-States  <=50K  \n",
       "4             0             0              40           Cuba  <=50K  "
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv('../../data/adult.data.csv')\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1. Сколько мужчин и женщин (признак *sex*) представлено в этом наборе данных?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Male      21790\n",
       "Female    10771\n",
       "Name: sex, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['sex'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2. Каков средний возраст (признак *age*) женщин?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "36.86"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round(data[data['sex']=='Female']['age'].mean(),2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3. Какова доля граждан Германии (признак *native-country*)?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.004207487485028101"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(m,n)=data.shape\n",
    "float((data['native-country'] == 'Germany').sum())/m\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**4. Постройте гистограмму распределения (*bar plot*) образования людей (признак *education*).**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABJsAAAJMCAYAAABdHKewAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3Xtw1fWd8PFPSPDGRWRWXVnLVlqtiyt2LQO6S1GsFqVl\nnqlVbgNq1emu66JY1+Ui1wcUXDRWRVB01S2IFxStTruOghdUSlCqdomXVR9lucgKBpVEhJDzff7o\nkIogBPebnERfrxlmkl++J/mcHye/c/LO75yUpJRSAAAAAEAGrYo9AAAAAABfHWITAAAAANmITQAA\nAABkIzYBAAAAkI3YBAAAAEA2YhMAAAAA2ZQVe4DGtn79pmKPAAAAAPCVcvDB7b7wY85sAgAAACAb\nsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAg\nG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAA\nIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAA\nACCbsmIPQPPT/7x+xR6h0Tx612+LPQIAAAB8pTmzCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAg\nG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAA\nIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAA\nACCbRo1Nr7zySgwbNiwiIlauXBmDBw+OIUOGxIQJE6JQKERExIwZM+Kss86KQYMGxR/+8Ie9XgsA\nAABA89Fosem2226LsWPHxpYtWyIiYurUqTFixIiYN29epJRi0aJFUVlZGcuWLYv58+dHeXl5TJo0\naa/XAgAAANB8NFps6ty5c9x0003171dWVkaPHj0iIqJ3796xZMmSWL58efTq1StKSkqiU6dOUVdX\nF1VVVXu1FgAAAIDmo9FiU9++faOsrKz+/ZRSlJSUREREmzZtYtOmTVFdXR1t27atX7N9+96sBQAA\nAKD5KNvzkjxatfpT16qpqYn27dtH27Zto6amZoft7dq126u1e3LQQQdEWVlppmtBS3fwwXu+zQAA\nAABfXpPFpq5du0ZFRUX07NkzFi9eHCeccEJ07tw5pk+fHhdccEGsW7cuCoVCdOzYca/W7snGjZ80\nwbWjpVi/3tlwAAAA8L+1u5M5miw2jRw5MsaNGxfl5eXRpUuX6Nu3b5SWlkb37t1j4MCBUSgUYvz4\n8Xu9FgAAAIDmoySllIo9RGNyJsve639ev2KP0Ggeveu3xR4BAAAAWrzdndnUaC8QDgAAAMDXj9gE\nAAAAQDZiEwAAAADZiE0AAAAAZCM2AQAAAJCN2AQAAABANmITAAAAANmITQAAAABkIzYBAAAAkI3Y\nBAAAAEA2YhMAAAAA2YhNAAAAAGQjNgEAAACQjdgEAAAAQDZiEwAAAADZiE0AAAAAZCM2AQAAAJCN\n2AQAAABANmITAAAAANmITQAAAABkIzYBAAAAkI3YBAAAAEA2YhMAAAAA2YhNAAAAAGQjNgEAAACQ\njdgEAAAAQDZiEwAAAADZiE0AAAAAZCM2AQAAAJCN2AQAAABANmITAAAAANmITQAAAABkIzYBAAAA\nkI3YBAAAAEA2YhMAAAAA2YhNAAAAAGQjNgEAAACQjdgEAAAAQDZiEwAAAADZiE0AAAAAZCM2AQAA\nAJCN2AQAAABANmITAAAAANmITQAAAABkIzYBAAAAkI3YBAAAAEA2YhMAAAAA2YhNAAAAAGQjNgEA\nAACQjdgEAAAAQDZiEwAAAADZiE0AAAAAZCM2AQAAAJCN2AQAAABANmITAAAAANmITQAAAABkIzYB\nAAAAkI3YBAAAAEA2YhMAAAAA2YhNAAAAAGQjNgEAAACQjdgEAAAAQDZiEwAAAADZiE0AAAAAZCM2\nAQAAAJCN2AQAAABANmITAAAAANmITQAAAABkIzYBAAAAkI3YBAAAAEA2YhMAAAAA2YhNAAAAAGQj\nNgEAAACQjdgEAAAAQDZiEwAAAADZiE0AAAAAZCM2AQAAAJCN2AQAAABANmITAAAAANmITQAAAABk\nIzYBAAAAkI3YBAAAAEA2YhMAAAAA2YhNAAAAAGQjNgEAAACQjdgEAAAAQDZiEwAAAADZiE0AAAAA\nZCM2AQAAAJCN2AQAAABANmITAAAAANmUNeUXq62tjVGjRsWaNWuiVatWMXny5CgrK4tRo0ZFSUlJ\nHHnkkTFhwoRo1apVzJgxI55++ukoKyuLMWPGRLdu3WLlypW7XAsAAABA89CkpeaZZ56Jbdu2xb33\n3hsXX3xx/PKXv4ypU6fGiBEjYt68eZFSikWLFkVlZWUsW7Ys5s+fH+Xl5TFp0qSIiF2uBQAAAKD5\naNLYdMQRR0RdXV0UCoWorq6OsrKyqKysjB49ekRERO/evWPJkiWxfPny6NWrV5SUlESnTp2irq4u\nqqqqdrkWAAAAgOajSZ9Gd8ABB8SaNWvijDPOiI0bN8Ytt9wSL7zwQpSUlERERJs2bWLTpk1RXV0d\nHTp0qL/c9u0ppZ3W7slBBx0QZWWljXOFaHEOPrhdsUcAAACAr7QmjU133XVX9OrVKy6//PJ47733\n4txzz43a2tr6j9fU1ET79u2jbdu2UVNTs8P2du3a7fD6TNvX7snGjZ/kvRK0aOvX7zlQAgAAALu3\nu5M5mvRpdO3bt4927f44zIEHHhjbtm2Lrl27RkVFRURELF68OLp37x7HH398PPfcc1EoFGLt2rVR\nKBSiY8eOu1wLAAAAQPNRklJKTfXFampqYsyYMbF+/fqora2Nc845J/76r/86xo0bF7W1tdGlS5eY\nMmVKlJaWxk033RSLFy+OQqEQo0ePju7du8c777yzy7W740yWvdf/vH7FHqHRPHrXb4s9AgAAALR4\nuzuzqUljUzGITXtPbAIAAAB2p9k8jQ4AAACArzaxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAg\nG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAA\nIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAA\nACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIA\nAAAgG7EJAAAAgGzKij0AAF8PZ183rNgjNJr5l88p9ggAANBsOLMJAAAAgGzEJgAAAACyEZsAAAAA\nyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAA\nAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAA\nAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsA\nAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGb\nAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIR\nmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACy\nEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAA\nshGbAAAAAMimrKm/4K233hpPPvlk1NbWxuDBg6NHjx4xatSoKCkpiSOPPDImTJgQrVq1ihkzZsTT\nTz8dZWVlMWbMmOjWrVusXLlyl2sBAAAAaB6atNRUVFTESy+9FPfcc0/MmTMn1q1bF1OnTo0RI0bE\nvHnzIqUUixYtisrKyli2bFnMnz8/ysvLY9KkSRERu1wLAAAAQPPRpLHpueeei6OOOiouvvji+Id/\n+Ic4+eSTo7KyMnr06BEREb17944lS5bE8uXLo1evXlFSUhKdOnWKurq6qKqq2uVaAAAAAJqPJn0a\n3caNG2Pt2rVxyy23xOrVq+Oiiy6KlFKUlJRERESbNm1i06ZNUV1dHR06dKi/3Pbtu1oLAAAAQPPR\npLGpQ4cO0aVLl9hnn32iS5cuse+++8a6devqP15TUxPt27ePtm3bRk1NzQ7b27Vrt8PrM21fuycH\nHXRAlJWV5r0itFgHH9yu2CMAX0GOLQAA8CdNGpu+973vxa9+9av42c9+Fu+//35s3rw5TjzxxKio\nqIiePXvG4sWL44QTTojOnTvH9OnT44ILLoh169ZFoVCIjh07RteuXXdauycbN37SBNeMlmL9emfD\nAfk5tgAA8HWzu1+4Nmls6tOnT7zwwgtx1llnRUopxo8fH4cffniMGzcuysvLo0uXLtG3b98oLS2N\n7t27x8CBA6NQKMT48eMjImLkyJE7rQUAAACg+ShJKaViD9GY/LZ57/U/r1+xR2g0j97122KPAF9b\nZ183rNgjNJr5l88p9ggAANCkdndmU5P+NToAAAAAvtrEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkA\nAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsGhSbJk+evNO2kSNHZh8GAAAAgJatbHcf\nvPLKK2PVqlWxYsWKePPNN+u3b9u2LTZt2tTowwEAAADQsuw2Nl100UWxZs2auOqqq+Kf/umf6reX\nlpbGt771rUYfDgAAAICWZbex6fDDD4/DDz88Hnnkkaiuro5NmzZFSikiIj755JPo0KFDkwwJAAAA\nQMuw29i03a233hq33nrrDnGppKQkFi1a1GiDAQAAANDyNCg2zZ8/PxYuXBgdO3Zs7HkAAAAAaMEa\n9NfoDjvssDjwwAMbexYAAAAAWrgGndn0zW9+M4YMGRI9e/aMffbZp377Z180HAAAAAAaFJsOPfTQ\nOPTQQxt7FgAAAABauAbFJmcwAQAAANAQDYpNRx99dJSUlOyw7ZBDDolnnnmmUYYCAAAAoGVqUGx6\n/fXX69+ura2NhQsXxssvv9xoQwEAAADQMjXor9F9VuvWreOMM86IpUuXNsY8AAAAALRgDTqz6eGH\nH65/O6UUb775ZrRu3brRhgIAAACgZWpQbKqoqNjh/YMOOiiuv/76RhkIAAAAgJarQbFp6tSpUVtb\nG++8807U1dXFkUceGWVlDbooAAAAAF8jDSpGK1asiEsuuSQ6dOgQhUIhNmzYEDfffHMcd9xxjT0f\nAAAAAC1Ig2LTlClT4vrrr6+PSy+//HJMnjw5HnjggUYdDgAAAICWpUF/je6TTz7Z4Sym7373u7Fl\ny5ZGGwoAAACAlqlBZzYdeOCBsXDhwjj11FMjImLhwoXRoUOHRh2sKfzorB8We4RG9ZsHHi/2CAAA\nAMDXTINi0+TJk+Pv//7v48orr6zfdu+99zbaUAAAAAC0TA16Gt3ixYtj//33j6eeeir+/d//PTp2\n7BjLli1r7NkAAAAAaGEaFJvuv//+uOeee+KAAw6Io48+OhYsWBBz585t7NkAAAAAaGEaFJtqa2uj\ndevW9e9/9m0AAAAA2K5Br9l06qmnxrnnnhtnnHFGREQ8/vjj8YMf/KBRBwMAAACg5WlQbLriiivi\nscceixdeeCHKysrinHPOqf/LdAAAAACwXYNiU0TE6aefHqeffnpjzgIAAABAC9eg12wCAAAAgIYQ\nmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACy\nEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAA\nshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAA\nALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAA\nAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYA\nAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQm\nAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgm6LEpg8++CBO\nOumkePvtt2PlypUxePDgGDJkSEyYMCEKhUJERMyYMSPOOuusGDRoUPzhD3+IiPjCtQAAAAA0D00e\nm2pra2P8+PGx3377RUTE1KlTY8SIETFv3rxIKcWiRYuisrIyli1bFvPnz4/y8vKYNGnSF64FAAAA\noPlo8th0zTXXxKBBg+KQQw6JiIjKysro0aNHRET07t07lixZEsuXL49evXpFSUlJdOrUKerq6qKq\nqmqXawEAAABoPpo0Ni1YsCA6duwY3//+9+u3pZSipKQkIiLatGkTmzZtiurq6mjbtm39mu3bd7UW\nAAAAgOajrCm/2IMPPhglJSXxu9/9Ll577bUYOXJkVFVV1X+8pqYm2rdvH23bto2ampodtrdr1y5a\ntWq109o9OeigA6KsrDTvFWkhDj64XbFHaHbsE6AxOLYAAMCfNGlsuvvuu+vfHjZsWEycODGmT58e\nFRUV0bNnz1i8eHGccMIJ0blz55g+fXpccMEFsW7duigUCtGxY8fo2rXrTmv3ZOPGTxrzKjVr69c7\n8+vz7BOgMTi2AADwdbO7X7g2aWzalZEjR8a4ceOivLw8unTpEn379o3S0tLo3r17DBw4MAqFQowf\nP/4L1wIAAADQfBQtNs2ZM6f+7blz5+708eHDh8fw4cN32HbEEUfsci0AAAAAzUOT/zU6AAAAAL66\nxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACA\nbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAA\ngGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAA\nAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkA\nAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJ\nAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBux\nCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAb\nsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAg\nG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAA\nIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyEZsAgAA\nACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIA\nAAAgG7EJAAAAgGzEJgAAAACyEZsAAAAAyKasKb9YbW1tjBkzJtasWRNbt26Niy66KL797W/HqFGj\noqSkJI488siYMGFCtGrVKmbMmBFPP/10lJWVxZgxY6Jbt26xcuXKXa4FAAAAoHlo0lLzyCOPRIcO\nHWLevHlx++23x+TJk2Pq1KkxYsSImDdvXqSUYtGiRVFZWRnLli2L+fPnR3l5eUyaNCkiYpdrAQAA\nAGg+mjQ2nX766XHppZdGRERKKUpLS6OysjJ69OgRERG9e/eOJUuWxPLly6NXr15RUlISnTp1irq6\nuqiqqtrlWgAAAACajyZ9Gl2bNm0iIqK6ujouueSSGDFiRFxzzTVRUlJS//FNmzZFdXV1dOjQYYfL\nbdq0KVJKO63dk4MOOiDKykob4do0fwcf3K7YIzQ79gnQGBxbAADgT5o0NkVEvPfee3HxxRfHkCFD\non///jF9+vT6j9XU1ET79u2jbdu2UVNTs8P2du3a7fD6TNvX7snGjZ/kvQItyPr1e45xXzf2CdAY\nHFsAAPi62d0vXJv0aXQbNmyI888/P6644oo466yzIiKia9euUVFRERERixcvju7du8fxxx8fzz33\nXBQKhVi7dm0UCoXo2LHjLtcCAAAA0Hw06ZlNt9xyS3z88ccxc+bMmDlzZkREXHnllTFlypQoLy+P\nLl26RN++faO0tDS6d+8eAwcOjEKhEOPHj4+IiJEjR8a4ceN2WAsAAABA81GSUkrFHqIx7e6pDT86\n64dNOEnT+80Dj3+py/U/r1/mSZqPR+/6bbFHgK+ts68bVuwRGs38y+cUewQAAGhSzeZpdAAAAAB8\ntYlNAAAAAGQjNgEAAACQjdgEAAAAQDZiEwAAAADZiE0AAAAAZCM2AQAAAJCN2AQAAABANmITAAAA\nANmUFXsAoOX6yb+cVewRGtVD//pAsUcAAABocZzZBAAAAEA2YhMAAAAA2YhNAAAAAGQjNgEAAACQ\njdgEAAAAQDZiEwAAAADZiE0AAAAAZCM2AQAAAJCN2AQAAABANmITAAAAANmITQAAAABkIzYBAAAA\nkI3YBAAAAEA2YhMAAAAA2YhNAAAAAGQjNgEAAACQTVmxBwAA+KzBc39e7BEa1T1DZxd7BACARuXM\nJgAAAACyEZsAAAAAyEZsAgAAACAbsQkAAACAbMQmAAAAALIRmwAAAADIRmwCAAAAIBuxCQAAAIBs\nxCYAAAAAsikr9gDQEvyfi/9PsUdoVL+++dfFHgEAAICvCGc2AQAAAJCN2AQAAABANmITAAAAANmI\nTQAAAABk4wXCAaBIBt5yfrFHaFT3/cMdxR4BAIAicGYTAAAAANmITQAAAABkIzYBAAAAkI3YBAAA\nAEA2YhMAAAAA2YhNAAAAAGRTVuwBAAAAKI6bf39zsUdoVBcff3GxR4CvJWc2AQAAAJCN2AQAAABA\nNmITAAAAANmITQAAAABkIzYBAAAAkI3YBAAAAEA2YhMAAAAA2YhNAAAAAGQjNgEAAACQjdgEAAAA\nQDZiEwAAAADZiE0AAAAAZCM2AQAAAJBNWbEHAABgz3724CXFHqFR3fnTG4s9AgCQiTObAAAAAMhG\nbAIAAAAgG0+jAwCAr5ArF00q9giN6qofTCj2CADsgTObAAAAAMhGbAIAAAAgG0+jA8jsp/93ULFH\naFQPjr+32CMAAADNmDObAAAAAMhGbAIAAAAgG7EJAAAAgGy8ZhMAAADAl7Bw7aPFHqFRndqp/5e6\nnNgEAECLdclvRhV7hEZz44+mFXsEAPhSPI0OAAAAgGzEJgAAAACyEZsAAAAAyMZrNgEAAF9505ZM\nL/YIjWrU315R7BEA6jmzCQAAAIBsxCYAAAAAshGbAAAAAMhGbAIAAAAgG7EJAAAAgGzEJgAAAACy\nEZsAAAAAyEZsAgAAACCbsmIPAAAAAM3Jr169s9gjNJpzuv6s2CPwNeDMJgAAAACyEZsAAAAAyEZs\nAgAAACCbFveaTYVCISZOnBhvvPFG7LPPPjFlypT4y7/8y2KPBQAAAEC0wNi0cOHC2Lp1a9x3333x\n8ssvx7Rp02LWrFnFHgsAAAC+sh76f/cVe4RG9ZMuA4s9wldKi3sa3fLly+P73/9+RER897vfjRUr\nVhR5IgAAAAC2a3Gxqbq6Otq2bVv/fmlpaWzbtq2IEwEAAACwXUlKKRV7iL0xderUOO6446Jfv34R\nEdG7d+9YvHhxkacCAAAAIKIFntl0/PHH18ell19+OY466qgiTwQAAADAdi3uzKbtf43uv/7rvyKl\nFFdffXV861vfKvZYAAAAAEQLjE0AAAAANF8t7ml0AAAAADRfYhMAAAAA2YhNAAAAAGQjNu1CRUVF\nnHjiiTFs2LAYOnRoDBgwIF599dUGX3716tUxYMCA7Gubm4qKirjssst22HbttdfGggUL4qGHHopz\nzjknhg0bFoMGDYrnnnuu0eZYvHhxjBo1qtE+f2N55ZVXYtiwYTtsu/rqq+Oee+6pf/++++6L2tra\nXe7rlqaioiK+853vxG9+85sdtvfv33+v///mzp2bc7QWYevWrXH55ZfHgAED4vzzz4933303Xnjh\nhXj99dcjIuLv/u7vijzhF5s9e3acd955MXTo0Bg2bFisWLGi2CNFxI7HsOaw/2677bbo1atXbNmy\npdij7Nb243wxtZR91RwsWLAghg0bFsOGDYsBAwbEscceu9fHjjvuuCPOPPPM+OlPfxpPPPFERER8\n+OGH8eijj0ZExKhRo+r/UnBz8vnHc4MGDYrf/va3e/U51q5dG08++eT/epbt9+fF8Nn9sP12MGfO\nnAZd9pVXXonTTjstrrvuui/1tRcsWBDXXnvtl7rsds3h9vWTn/ykfv+NHj16r7+HnnnmmRgwYECc\nffbZMXHixEgptYjvoS/rs49xV65cGYMHD44hQ4bEhAkTolAoRMSfHsvluI00N7t6jP9ZezqufPDB\nB3HSSSfF22+/HRERb7zxRrzwwgsREXHKKac02/u+/82xpqGGDRtWv1++rObwmG9PPnsbeu2112LI\nkCExbNip/CXtAAAdL0lEQVSwuOCCC2LDhg0R0TJ+ThSbvsAJJ5wQc+bMiblz58Yll1wSN9xwQ7FH\najE2bdoUM2fOjNtvvz3mzJkTN9xwQ4wZM6b+zoU//qA0duzY+juLqqqquPDCC3e647n11lu/Uvut\nS5cuO8SmN954IzZv3rzXn2fWrFk5x2oR7r///jjggAPi/vvvj7Fjx8bkyZPjwQcfjPfff7/Yo+3W\nW2+9FU8++WTceeedMXfu3BgzZkyMGTOm2GM1S4888kj069dvpyDLzuyrhjvzzDNjzpw5MWfOnDjm\nmGNi7Nixe3Xs+Pjjj+NXv/pV3HvvvXHHHXfE1VdfHRF/PH7niDCN7bOP5/7t3/4tbr/99njttdca\nfPmlS5fG73//+//1HMW+P9++H7bvizvvvDM+/vjjPV7u2WefjXPOOScuv/zyJpiyedqyZUuklOr3\n39SpU/fqe6i6ujqmT58et9xyS8yfPz/+4i/+IjZu3Nhivof21ucf406dOjVGjBgR8+bNi5RSLFq0\nKCK+uo/lPn/9d2V3x5Xa2toYP3587LfffvXbHn/88Xjrrbeyz9oYvuyxhj/5/G3oqquuinHjxsWc\nOXPitNNOi9tuuy0iin+/0hBlxR6gJfj444+jY8eOsWzZspgxY0aklKKmpiauu+66OOKII2LmzJmx\ncOHCqKuri8GDB0evXr2iqqoq/vEf/zHWr18f3/nOd2LKlCnx3nvvxbhx42LLli2x7777xuTJk3f4\nOs8//3z88pe/jH333Tc6dOgQV199dbz22mtx7bXXRuvWrWPAgAHxzjvvREVFRWzbti1++MMfxs9/\n/vMi7ZUvts8++0RtbW3cc8890adPn+jcuXMsXLgwWrXasW2mlGLSpEmxYsWK+LM/+7NYs2ZNzJo1\nK2bMmBEffvhhfPjhhzFr1qy49tprY926dfH+++/HKaecEpdddlm8/fbbMWbMmNh///1j//33jwMP\nPLBI1/bL6dy5c9x0003xL//yLxERUVNTE8OHD9/ht1rz58+P9evXx2WXXRbnnnturFy5Mi688MKo\nqqqKPn36xPDhw4s1/pd29NFHxzvvvBObNm2Kdu3axSOPPBL9+/eP9957L+bOnRuPP/54bN68OQ46\n6KCYMWNGrFmzJkaPHh1lZWVRKBTiuuuui4cffjg++uijmDhxYlx55ZUxYcKEWLlyZRQKhRgxYkT0\n7NkzfvzjH8c3v/nNaN26dQwdOjSuueaaKCsri/333z9uuOGGaNu2bbF3xV576623onfv3hHxx2j3\n+9//Pg444ICorKyMb3/72/VnPq1duzY6dOgQN954Y7Ru3brIU0e0a9cu1q5dGw888ED07t07/uqv\n/ioeeOCBePXVV2Py5MlRWlpafzwsFApx2WWXxWGHHRarV6+OH/3oR/Hmm2/Gq6++GieffHL84he/\niDfeeCOmTJkSEVF/nGzXrt0OX/Opp56qP1Yfc8wxMWnSpPjd73630/F1V3b1+du2bbvLY1VpaelO\nx/TDDjvsS+2nioqK6Ny5cwwaNCiuuOKKOPPMM+Puu++Ohx9+OFq1ahXHHntsjB07Nh5//PG47bbb\noqysLA455JC4/vrro7q6Oq644oqorq6Ourq6uPTSS+PEE0/c5X747HF43bp1MXHixNiyZUusX78+\nRowYEaeeeuouL/fEE0/ErFmzomPHjlFbWxtdunSJioqKmD17drRu3TrWrVsXgwYNiqVLl8brr78e\n55xzTgwZMuRL7YvmuK/OPPPMuPHGG+Pwww+Pxx57LF588cW45JJLvtTnKpb//M//jLfeeit++tOf\nxo033tjgY8f+++8fnTp1is2bN8fmzZujpKQkIiJuueWWeP311+O+++6LiD/+hvX222+P6urqmDhx\nYnTr1q0o13N32rRpEwMHDozHHnssfv3rX8fy5csjIuLHP/5xnHvuufHuu+/G2LFjo7a2Nvbbb7+4\n7rrrYvbs2fHpp5/G3/zN38Rhhx22y+PWRRddFB06dIjevXvHcccdt9NjxRdffLH+/nzmzJn12wqF\nQpx33nlxxhlnNOl+qK6ujlatWsV5550X3/jGN+Kjjz6K2bNnx5gxY2L16tVRV1cXP/vZz+Lwww+P\nBQsWROvWrePP//zP47TTTqv/HMuXL9/pvrWsrCxGjx4da9eujdra2hg3blxE/PE39Oeff35UVVXF\n4MGDY+DAgbt8zNu+ffuYNm3aTv8vxfb666/H5s2b4/zzz49t27bFpZdeGs8++2yDv4deeumlOOqo\no+Kaa66JVatWxdlnnx0dO3Zskd9DDfH5x7iVlZXRo0ePiIjo3bt3PP/88/HWW2/VP5br1q3bLm8j\nLdXnr//n759Gjx69w3HlBz/4wQ6Xv+aaa2LQoEExe/bsiIj4n//5n3jooYeidevWccwxx0RExMSJ\nE2P16tURETFjxoxm+3PQFx1rJk6cuNNj9+uvv36nn3FfeeWVuPrqq6NQKMShhx5afwbczTffHBs2\nbIjNmzdHeXl5fOMb39jlsWP16tUxZsyYqKuri5KSkhg7dmwcffTRxdwlDfL521B5eXkccsghERFR\nV1cX++67b8v5OTGxk6VLl6YTTjghDR06NA0YMCB169YtPfvss2nu3Llp3bp1KaWUZs2alWbOnJkq\nKyvTwIED07Zt29KWLVvS1KlT03//93+nnj17pg8//DDV1dWlU045JW3YsCFdeuml6emnn04ppbRk\nyZL0i1/8Iq1atSqdffbZqVAopD59+tR//rvuuitNmzYtLV26NPXv379+tj59+qRVq1alLVu2pHvu\nuafpd85nfHY/bf930kknpQcffDC9++67adKkSem0005LJ598crr77rt3uvwTTzyRLr300pRSSh98\n8EH63ve+l1atWpVGjhyZ7rzzzpRSSqtWrUr3339/SimlTz/9NPXo0SOllNLPf/7z9Nxzz6WUUrr1\n1lvTyJEjm+Aa57X9//6zbrzxxjRv3rz69/v06ZM+/fTTtHTp0tSvX7+0ZcuW9Mknn9Tvh5Zk6dKl\nacSIEenmm29ODzzwQCoUCmno0KHpmWeeSVdccUW66aabUl1dXUoppfPPPz+9+OKLae7cuemqq65K\nW7duTUuWLElvvPFGSimlv/3bv00ppXT33Xenf/3Xf00ppVRVVZX69euXUvrjfqusrEwppTRt2rR0\nxx13pLq6uvTEE0+kNWvWNPVVz+Lee+9No0ePToVCIb300kvp6KOPTv/8z/+cnnnmmZRSSl27dk2r\nVq1KKaU0dOjQ9MorrxRz3B2sWLEijRo1Kp100kmpb9++6bHHHks/+clP0quvvppS+uOxYPjw4WnV\nqlWpZ8+e6eOPP07vv/9+OvbYY9PGjRvTp59+mk488cSUUkpnn312evPNN1NKKd1///2pvLx8h69V\nW1ub+vTpkzZs2JBSSmn27Nlp9erVX3h8HTFiRErpT7epXX3+LzpW7eqY/mVdfvnl6amnnkoppTRo\n0KD08ssvpzPPPLP+//Huu+9OtbW1afjw4ek//uM/UkopPfTQQ+mjjz5K06ZNS3fddVdKKaV169al\nPn36pK1bt+60Hz5/23/++efT0qVLU0opLV++PJ133nlfuP9OPvnkVFVVlQqFQrrwwgvTgw8+WH9c\n2rp16/9v796DqjruAI5/L8hDubzkZUmIPEatGpUgjghj6iuWxkKKQVQKo40aaNH8IYlXEQgxIBNs\n7cNJiYRoRmwzPsBg2k4tTnRoqzZqTSCpQHJBg3XkBiHABRGB7R8MRxBQNCjS+X3+unAO69m9e377\nOHtWdeHCBfXss8+qmzdvqq+//lqFh4c/cFk8jmX1hz/8Qe3atUsppdS6detUeXn5A6c1XBISEtTp\n06eVUkoZDIZBx462tja1ceNGFRISooKCgrT2uef9YzAY1Ntvv62UUio/P1+9/vrrjyBH99bzGrsV\nFRWpRYsWqYSEBNXZ2ana2tpUZGSkKisrU/Hx8Vq5HD9+XP39739X+fn5aseOHUopdde4dfPmTaWU\n6revqNTt9vzkyZPaNbW2tqrw8HDV0NDw0Muhu78WGxurXnrpJXXy5EkVExOj/va3vymllMrLy1MZ\nGRlKKaWamprUc889p65fv96nX9Ktv7Z17969WllVVVWpvXv3qvz8fLV69WrV2dmpqqur1Y9+9KMB\n+7wff/xxv99Lz/o6HMrKytSBAwdUZ2enqqysVAsXLlSJiYmDvocKCwtVcHCwMplMymw2qxdeeEFV\nVlaOiHvoQfXs44aEhGi/P3XqlEpMTFRK3W53+6sjI13P/PfXPvWMKz3l5+dr9SAmJkZ99dVXSqne\n44P58+ers2fPKqW66s2f//znh56fwRpMrLlb3/3OMW54eLhWBgcPHlSff/65iomJUR9++KFSqqtc\ncnJyBowdGzZsUEVFRUoppf7zn/+oiIgIpdTtuvc462+ceP78eRUaGqquX7+ulBoZ40RZ2TSAoKAg\nfv3rXwNQWVnJihUr2L59OxkZGYwZM4aamhoCAgKoqqpi+vTpWFpaYmlpyebNm7ly5QpeXl7aLLOL\niws3btygoqKC3bt3k5ubi1KKUaNuF399fT16vR4PDw8AZs2axc6dO5k3bx4+Pj7aeTt27OBXv/oV\ntbW1zJ079xGWSP96lhN07eVhMplobW0lNTUVgKqqKtauXcvMmTPZuXMnLS0tTJw4EQ8PD/z9/QEY\nO3Ysvr6+WjrdeXZycqK0tJQzZ86g1+tpa2sD4NKlS9oTn4CAACorKx9JfofThAkTsLa2BuhVd0aa\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10c1e1dd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(20, 10))\n",
    "sns.countplot(x=\"education\", data=data, palette=\"Greens_d\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**5. Каковы средние значения и среднеквадратичные отклонения возраста тех, кто получает более 50K в год (признак *salary*) и тех, кто получает менее 50K в год? **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Средний возраст людей с зарплатой >50k: 44.0 +- 10.5 лет, с зарплатой <=50k - 37.0 +- 14.0 лет.\n"
     ]
    }
   ],
   "source": [
    "ages_poor = data[data['salary']=='<=50K']['age']\n",
    "ages_rich = data[data['salary']=='>50K']['age']\n",
    "\n",
    "print(\"Средний возраст людей с зарплатой >50k: {0} +- {1} лет, с зарплатой <=50k - {2} +- {3} лет.\".format(\n",
    "    round(ages_rich.mean()), round(ages_rich.std(), 1),\n",
    "    round(ages_poor.mean()), round(ages_poor.std(), 1)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**6. Правда ли, что люди, которые получают больше 50k, имеют как минимум высшее образование? (признак *education - Bachelors, Prof-school, Assoc-acdm, Assoc-voc, Masters* или *Doctorate*)**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['HS-grad', 'Masters', 'Bachelors', 'Some-college', 'Assoc-voc',\n",
       "       'Doctorate', 'Prof-school', 'Assoc-acdm', '7th-8th', '12th', '10th',\n",
       "       '11th', '9th', '5th-6th', '1st-4th'], dtype=object)"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[data['salary']=='>50K']['education'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**7. Выведите статистику возраста для каждой расы (признак *race*) и каждого пола. Используйте *groupby* и *describe*. Найдите таким образом максимальный возраст мужчин расы *Amer-Indian-Eskimo*.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>amin</th>\n",
       "      <th>amax</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>race</th>\n",
       "      <th>sex</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Amer-Indian-Eskimo</th>\n",
       "      <th>Female</th>\n",
       "      <td>37.117647</td>\n",
       "      <td>13.114991</td>\n",
       "      <td>17</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>37.208333</td>\n",
       "      <td>12.049563</td>\n",
       "      <td>17</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Asian-Pac-Islander</th>\n",
       "      <th>Female</th>\n",
       "      <td>35.089595</td>\n",
       "      <td>12.300845</td>\n",
       "      <td>17</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>39.073593</td>\n",
       "      <td>12.883944</td>\n",
       "      <td>18</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Black</th>\n",
       "      <th>Female</th>\n",
       "      <td>37.854019</td>\n",
       "      <td>12.637197</td>\n",
       "      <td>17</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>37.682600</td>\n",
       "      <td>12.882612</td>\n",
       "      <td>17</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Other</th>\n",
       "      <th>Female</th>\n",
       "      <td>31.678899</td>\n",
       "      <td>11.631599</td>\n",
       "      <td>17</td>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>34.654321</td>\n",
       "      <td>11.355531</td>\n",
       "      <td>17</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">White</th>\n",
       "      <th>Female</th>\n",
       "      <td>36.811618</td>\n",
       "      <td>14.329093</td>\n",
       "      <td>17</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>39.652498</td>\n",
       "      <td>13.436029</td>\n",
       "      <td>17</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                mean        std  amin  amax\n",
       "race               sex                                     \n",
       "Amer-Indian-Eskimo Female  37.117647  13.114991    17    80\n",
       "                   Male    37.208333  12.049563    17    82\n",
       "Asian-Pac-Islander Female  35.089595  12.300845    17    75\n",
       "                   Male    39.073593  12.883944    18    90\n",
       "Black              Female  37.854019  12.637197    17    90\n",
       "                   Male    37.682600  12.882612    17    90\n",
       "Other              Female  31.678899  11.631599    17    74\n",
       "                   Male    34.654321  11.355531    17    77\n",
       "White              Female  36.811618  14.329093    17    90\n",
       "                   Male    39.652498  13.436029    17    90"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.groupby(['race','sex'])['age'].agg([np.mean, np.std, np.min, np.max])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**8. Среди кого больше доля зарабатывающих много (>50K): среди женатых или холостых мужчин (признак *marital-status*)? Женатыми считаем тех, у кого *marital-status* начинается с *Married* (Married-civ-spouse, Married-spouse-absent или Married-AF-spouse), остальных считаем холостыми.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Доля женатых 0.4, доля одиноких 0.1\n"
     ]
    }
   ],
   "source": [
    "married_data = data[(data['sex'] == 'Male') & (data['marital-status'].str.startswith('Married'))]\\\n",
    "    ['salary'].value_counts()\n",
    "married_salary_ratio = round(float(married_data['>50K'])/(married_data['>50K']+married_data['<=50K']),2)\n",
    "single_data = data[(data['sex'] == 'Male') &\n",
    "     (data['marital-status'].isin(['Never-married', \n",
    "                                   'Separated', 'Divorced']))]['salary'].value_counts()\n",
    "single_salary_ratio = round(float(single_data['>50K'])/(single_data['>50K']+single_data['<=50K']),2)\n",
    "\n",
    "print('Доля женатых {0}, доля одиноких {1}'.format(\n",
    "    round(married_salary_ratio,1),round(single_salary_ratio,1)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**9. Какое максимальное число часов человек работает в неделю (признак *hours-per-week*)? Сколько людей работают такое количество часов и каков среди них процент зарабатывающих много?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Максимальное количество часов: 99, количество людей, работающих столько, 85. При этом доля зарабатывающих >50K 0.29\n"
     ]
    }
   ],
   "source": [
    "max_hours = data['hours-per-week'].max()\n",
    "num_hardworkers = data[data['hours-per-week']==max_hours].shape[0]\n",
    "salary_ratio = float(data[data['hours-per-week']==max_hours]['salary'].value_counts()['>50K'])/(\n",
    "data[data['hours-per-week']==max_hours]['salary'].value_counts()['<=50K']+\n",
    "data[data['hours-per-week']==max_hours]['salary'].value_counts()['>50K'])\n",
    "print('Максимальное количество часов: {0}, количество людей, работающих столько, {1}. \\\n",
    "При этом доля зарабатывающих >50K {2}'.format(max_hours,num_hardworkers,round(salary_ratio,2)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**10. Посчитайте среднее время работы (*hours-per-week*) зарабатывающих мало и много (*salary*) для каждой страны (*native-country*).**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "salary  native-country            \n",
       "<=50K   ?                             40.164760\n",
       "        Cambodia                      41.416667\n",
       "        Canada                        37.914634\n",
       "        China                         37.381818\n",
       "        Columbia                      38.684211\n",
       "        Cuba                          37.985714\n",
       "        Dominican-Republic            42.338235\n",
       "        Ecuador                       38.041667\n",
       "        El-Salvador                   36.030928\n",
       "        England                       40.483333\n",
       "        France                        41.058824\n",
       "        Germany                       39.139785\n",
       "        Greece                        41.809524\n",
       "        Guatemala                     39.360656\n",
       "        Haiti                         36.325000\n",
       "        Holand-Netherlands            40.000000\n",
       "        Honduras                      34.333333\n",
       "        Hong                          39.142857\n",
       "        Hungary                       31.300000\n",
       "        India                         38.233333\n",
       "        Iran                          41.440000\n",
       "        Ireland                       40.947368\n",
       "        Italy                         39.625000\n",
       "        Jamaica                       38.239437\n",
       "        Japan                         41.000000\n",
       "        Laos                          40.375000\n",
       "        Mexico                        40.003279\n",
       "        Nicaragua                     36.093750\n",
       "        Outlying-US(Guam-USVI-etc)    41.857143\n",
       "        Peru                          35.068966\n",
       "                                        ...    \n",
       ">50K    France                        50.750000\n",
       "        Germany                       44.977273\n",
       "        Greece                        50.625000\n",
       "        Guatemala                     36.666667\n",
       "        Haiti                         42.750000\n",
       "        Honduras                      60.000000\n",
       "        Hong                          45.000000\n",
       "        Hungary                       50.000000\n",
       "        India                         46.475000\n",
       "        Iran                          47.500000\n",
       "        Ireland                       48.000000\n",
       "        Italy                         45.400000\n",
       "        Jamaica                       41.100000\n",
       "        Japan                         47.958333\n",
       "        Laos                          40.000000\n",
       "        Mexico                        46.575758\n",
       "        Nicaragua                     37.500000\n",
       "        Peru                          40.000000\n",
       "        Philippines                   43.032787\n",
       "        Poland                        39.000000\n",
       "        Portugal                      41.500000\n",
       "        Puerto-Rico                   39.416667\n",
       "        Scotland                      46.666667\n",
       "        South                         51.437500\n",
       "        Taiwan                        46.800000\n",
       "        Thailand                      58.333333\n",
       "        Trinadad&Tobago               40.000000\n",
       "        United-States                 45.505369\n",
       "        Vietnam                       39.200000\n",
       "        Yugoslavia                    49.500000\n",
       "Name: hours-per-week, dtype: float64"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.groupby(['salary','native-country'])['hours-per-week'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
<<<<<<< HEAD:jupyter_notebooks/topic1_pandas_data_analysis/hw1_adult_pandas.ipynb
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
=======
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
>>>>>>> upstream/master:jupyter_notebooks/topic01_pandas_data_analysis/hw1_adult_pandas.ipynb
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
